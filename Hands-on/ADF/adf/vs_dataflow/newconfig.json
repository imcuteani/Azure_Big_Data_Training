{
    "$schema": "http://datafactories.schema.management.azure.com/vsschemas/V1/Microsoft.DataFactory.Config.json",
    "AzureStorageLinkedService1": [
        {
            "name": "$.properties.typeProperties.connectionString",
            "value": "DefaultEndpointsProtocol=https;AccountName=<accountname>;AccountKey=<accountkey>"
        }
    ],
    "AzureSqlLinkedService1": [
        {
            "name": "$.properties.typeProperties.connectionString",
            "value":  "Server=tcp:<logical SQL server name>.database.windows.net,1433;Database=<Azure SQL datbase>;User ID=<Username>;Password=<Password>;Trusted_Connection=False;Encrypt=True;Connection Timeout=30"
        }
    ]
}
  ```

  This example configures connectionString property of an Azure Storage linked service and an Azure SQL linked service. Notice that the syntax for specifying name is [JsonPath](https://goessner.net/articles/JsonPath/).   

  If JSON has a property that has an array of values as shown in the following code:  

```json
  "structure": [
        {
            "name": "FirstName",
          "type": "String"
        },
        {
          "name": "LastName",
          "type": "String"
      }
  ],
  ```

  Configure properties as shown in the following configuration file (use zero-based indexing):

```json
  {
      "name": "$.properties.structure[0].name",
      "value": "FirstName"
  }
  {
      "name": "$.properties.structure[0].type",
      "value": "String"
  }
  {
      "name": "$.properties.structure[1].name",
      "value": "LastName"
  }
  {
      "name": "$.properties.structure[1].type",
      "value": "String"
  }
  ```

### Property names with spaces
If a property name has spaces in it, use square brackets as shown in the following example (Database server name):

```json
{
   "name": "$.properties.activities[1].typeProperties.webServiceParameters.['Database server name']",
   "value": "MyAsqlServer.database.windows.net"
}